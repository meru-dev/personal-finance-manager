[project]
name = "personal-finance-manager"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "alembic>=1.14.0",
    "asyncpg>=0.30.0",
    "dishka>=1.4.2",
    "fastapi>=0.115.5",
    "greenlet>=3.1.1",
    "pydantic-settings>=2.6.1",
    "python-dotenv>=1.0.1",
    "ruff>=0.7.4",
    "sqlalchemy[mypy]>=2.0.36",
    "uvicorn>=0.32.1",
    "uvloop>=0.21.0",
    "pyjwt[crypto]>=2.10.1",
    "bcrypt>=4.2.1",
    "orjson>=3.10.12",
    "alembic-postgresql-enum>=1.5.0",
    "mypy>=1.14.1",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.2",
]


[tool.ruff]
line-length = 79

[tool.ruff.lint]
exclude = ["**/database/migrations/**"]
select = ['ALL']
ignore = [
    'B008', # fast-api Depends
    'D', # docs
    'ANN204', # init return type
    'ANN401', # enitity: Any
    'PLR0913', # Too many arguments
    'PGH003', # Use specific rule codes when ignoring type issues
    'TRY003', # error message outside class
    'EM', # literal stings
    'COM812', # Trailing comma missing
    'ISC001' # ruff warning
]

[tool.ruff.lint.per-file-ignores]
"*test*" = ['S101', 'S105', 'ANN201', 'ANN001']

[tool.mypy]
packages = ["src", "tests"]
exclude = ['src/infrastructure/database/migrations/versions']
python_version = 3.12
pretty = true
strict = true
disallow_untyped_calls = false # want typing for pytest fixtures
disallow_untyped_defs = false # want __init__ -> None


[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = 'function'
